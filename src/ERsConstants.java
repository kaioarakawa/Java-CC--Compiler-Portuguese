/* Generated By:JavaCC: Do not edit this line. ERsConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ERsConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SAIDA = 5;
  /** RegularExpression Id. */
  int ENTRADA = 6;
  /** RegularExpression Id. */
  int JOGALA = 7;
  /** RegularExpression Id. */
  int WHILE = 8;
  /** RegularExpression Id. */
  int SWITCH = 9;
  /** RegularExpression Id. */
  int CASE = 10;
  /** RegularExpression Id. */
  int BREAK = 11;
  /** RegularExpression Id. */
  int FOR = 12;
  /** RegularExpression Id. */
  int IF = 13;
  /** RegularExpression Id. */
  int ELSE = 14;
  /** RegularExpression Id. */
  int ELSEIF = 15;
  /** RegularExpression Id. */
  int FUNCAO = 16;
  /** RegularExpression Id. */
  int VIRGULA = 17;
  /** RegularExpression Id. */
  int PONTO = 18;
  /** RegularExpression Id. */
  int TXT = 19;
  /** RegularExpression Id. */
  int L = 20;
  /** RegularExpression Id. */
  int D = 21;
  /** RegularExpression Id. */
  int RACIO = 22;
  /** RegularExpression Id. */
  int OP = 23;
  /** RegularExpression Id. */
  int ADD = 24;
  /** RegularExpression Id. */
  int SUB = 25;
  /** RegularExpression Id. */
  int MUL = 26;
  /** RegularExpression Id. */
  int DIV = 27;
  /** RegularExpression Id. */
  int MOD = 28;
  /** RegularExpression Id. */
  int LOL = 29;
  /** RegularExpression Id. */
  int MAIOR = 30;
  /** RegularExpression Id. */
  int MINI = 31;
  /** RegularExpression Id. */
  int IGUALZIN = 32;
  /** RegularExpression Id. */
  int DIFER = 33;
  /** RegularExpression Id. */
  int VAR = 34;
  /** RegularExpression Id. */
  int ABREC = 35;
  /** RegularExpression Id. */
  int FECHAC = 36;
  /** RegularExpression Id. */
  int PARENTEA = 37;
  /** RegularExpression Id. */
  int PARENTEF = 38;
  /** RegularExpression Id. */
  int ASPAS = 39;
  /** RegularExpression Id. */
  int UNIQUE = 40;
  /** RegularExpression Id. */
  int MANY = 41;
  /** RegularExpression Id. */
  int EOL = 42;
  /** RegularExpression Id. */
  int THIS = 43;
  /** RegularExpression Id. */
  int TIPO = 44;
  /** RegularExpression Id. */
  int INT = 45;
  /** RegularExpression Id. */
  int STRING = 46;
  /** RegularExpression Id. */
  int BYTE = 47;
  /** RegularExpression Id. */
  int SHORT = 48;
  /** RegularExpression Id. */
  int LONG = 49;
  /** RegularExpression Id. */
  int FLOAT = 50;
  /** RegularExpression Id. */
  int DOUBLE = 51;
  /** RegularExpression Id. */
  int CHAR = 52;
  /** RegularExpression Id. */
  int BOOLEAN = 53;
  /** RegularExpression Id. */
  int BOOL = 54;
  /** RegularExpression Id. */
  int TRUE = 55;
  /** RegularExpression Id. */
  int FALSE = 56;
  /** RegularExpression Id. */
  int ATRI = 57;
  /** RegularExpression Id. */
  int LITERALS = 58;
  /** RegularExpression Id. */
  int VALUES = 59;
  /** RegularExpression Id. */
  int ASPTRING = 60;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"mostra\"",
    "\"pegaavisao\"",
    "\"jogala\"",
    "\"vaisegurando\"",
    "\"switch\"",
    "\"case\"",
    "\"break\"",
    "\"logoali\"",
    "\"sepa\"",
    "\"senaopa\"",
    "\"senaosepa\"",
    "\"procedimento\"",
    "\",\"",
    "\".\"",
    "\"txt\"",
    "<L>",
    "<D>",
    "<RACIO>",
    "<OP>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "<LOL>",
    "\">\"",
    "\"<\"",
    "\"=\\\'=\"",
    "\"<>\"",
    "\"var_dump\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"\\\'\"",
    "<UNIQUE>",
    "<MANY>",
    "\";\"",
    "\"this\"",
    "<TIPO>",
    "\"int\"",
    "\"String\"",
    "\"byte\"",
    "\"short\"",
    "\"long\"",
    "\"float\"",
    "\"double\"",
    "\"char\"",
    "\"boolean\"",
    "<BOOL>",
    "\"true\"",
    "\"false\"",
    "\"<=\"",
    "<LITERALS>",
    "<VALUES>",
    "<ASPTRING>",
  };

}
