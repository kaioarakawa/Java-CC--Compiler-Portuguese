/* Generated By:JavaCC: Do not edit this line. MainConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MainConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMENTARIO = 5;
  /** RegularExpression Id. */
  int EOL = 6;
  /** RegularExpression Id. */
  int VAR = 7;
  /** RegularExpression Id. */
  int IF = 8;
  /** RegularExpression Id. */
  int ELSE = 9;
  /** RegularExpression Id. */
  int ELIF = 10;
  /** RegularExpression Id. */
  int IN = 11;
  /** RegularExpression Id. */
  int OUT = 12;
  /** RegularExpression Id. */
  int WHILE = 13;
  /** RegularExpression Id. */
  int SWITCH = 14;
  /** RegularExpression Id. */
  int CASE = 15;
  /** RegularExpression Id. */
  int BREAK = 16;
  /** RegularExpression Id. */
  int FOR = 17;
  /** RegularExpression Id. */
  int FUNCTION = 18;
  /** RegularExpression Id. */
  int FOPEN = 19;
  /** RegularExpression Id. */
  int VIRG = 20;
  /** RegularExpression Id. */
  int DOT = 21;
  /** RegularExpression Id. */
  int LETTER = 22;
  /** RegularExpression Id. */
  int DIGIT = 23;
  /** RegularExpression Id. */
  int NUM = 24;
  /** RegularExpression Id. */
  int OPA = 25;
  /** RegularExpression Id. */
  int ADD = 26;
  /** RegularExpression Id. */
  int SUB = 27;
  /** RegularExpression Id. */
  int MUL = 28;
  /** RegularExpression Id. */
  int DIV = 29;
  /** RegularExpression Id. */
  int MOD = 30;
  /** RegularExpression Id. */
  int OPB = 31;
  /** RegularExpression Id. */
  int MAJ = 32;
  /** RegularExpression Id. */
  int MIN = 33;
  /** RegularExpression Id. */
  int EQL = 34;
  /** RegularExpression Id. */
  int DIF = 35;
  /** RegularExpression Id. */
  int CHA_A = 36;
  /** RegularExpression Id. */
  int CHA_F = 37;
  /** RegularExpression Id. */
  int PAR_A = 38;
  /** RegularExpression Id. */
  int PAR_F = 39;
  /** RegularExpression Id. */
  int ASPAS = 40;
  /** RegularExpression Id. */
  int ECO = 41;
  /** RegularExpression Id. */
  int AST = 42;
  /** RegularExpression Id. */
  int ARR = 43;
  /** RegularExpression Id. */
  int TIPO = 44;
  /** RegularExpression Id. */
  int INT = 45;
  /** RegularExpression Id. */
  int STRING = 46;
  /** RegularExpression Id. */
  int BYTE = 47;
  /** RegularExpression Id. */
  int SHORT = 48;
  /** RegularExpression Id. */
  int LONG = 49;
  /** RegularExpression Id. */
  int FLOAT = 50;
  /** RegularExpression Id. */
  int DOUBLE = 51;
  /** RegularExpression Id. */
  int CHAR = 52;
  /** RegularExpression Id. */
  int BOOLEAN = 53;
  /** RegularExpression Id. */
  int TF = 54;
  /** RegularExpression Id. */
  int TRUE = 55;
  /** RegularExpression Id. */
  int FALSE = 56;
  /** RegularExpression Id. */
  int TO = 57;
  /** RegularExpression Id. */
  int COUNTS = 58;
  /** RegularExpression Id. */
  int LITERALS = 59;
  /** RegularExpression Id. */
  int VALUES = 60;
  /** RegularExpression Id. */
  int TEIA = 61;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"#\"",
    "\";\"",
    "\"var\"",
    "\"if\"",
    "\"else\"",
    "\"elif\"",
    "\"get\"",
    "\"show\"",
    "\"while\"",
    "\"switch\"",
    "\"case\"",
    "\"break\"",
    "\"for\"",
    "\"function\"",
    "\"fopen\"",
    "\",\"",
    "\".\"",
    "<LETTER>",
    "<DIGIT>",
    "<NUM>",
    "<OPA>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "<OPB>",
    "\">\"",
    "\"<\"",
    "\"===\"",
    "\"#=\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"\\\'\"",
    "\"&\"",
    "\"**\"",
    "\"@\"",
    "<TIPO>",
    "\"int\"",
    "\"String\"",
    "\"byte\"",
    "\"short\"",
    "\"long\"",
    "\"float\"",
    "\"double\"",
    "\"char\"",
    "\"boolean\"",
    "<TF>",
    "\"true\"",
    "\"false\"",
    "\"<-\"",
    "\"$\"",
    "<LITERALS>",
    "<VALUES>",
    "<TEIA>",
  };

}
